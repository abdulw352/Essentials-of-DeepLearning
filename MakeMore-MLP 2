{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":4226660,"sourceType":"datasetVersion","datasetId":2491115}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import torch\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:52:18.251542Z","iopub.execute_input":"2024-07-11T19:52:18.251988Z","iopub.status.idle":"2024-07-11T19:52:18.260572Z","shell.execute_reply.started":"2024-07-11T19:52:18.251955Z","shell.execute_reply":"2024-07-11T19:52:18.259182Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"import random \nrandom.seed(42)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:52:20.873166Z","iopub.execute_input":"2024-07-11T19:52:20.873587Z","iopub.status.idle":"2024-07-11T19:52:20.879686Z","shell.execute_reply.started":"2024-07-11T19:52:20.873557Z","shell.execute_reply":"2024-07-11T19:52:20.877868Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\n\ndf = pd.read_csv('/kaggle/input/us-baby-names-by-year-of-birth/babyNamesUSYOB-mostpopular.csv')\nnames = df.Name.values","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:52:23.477237Z","iopub.execute_input":"2024-07-11T19:52:23.477774Z","iopub.status.idle":"2024-07-11T19:52:23.657275Z","shell.execute_reply.started":"2024-07-11T19:52:23.477737Z","shell.execute_reply":"2024-07-11T19:52:23.655770Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"chars = sorted(list(set(''.join(names))))\nstoi = {s:i+1 for i,s in enumerate(chars)}\nstoi['.'] = 0\nitos = {i:s for s,i in stoi.items()}\nitos","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:52:25.875912Z","iopub.execute_input":"2024-07-11T19:52:25.876320Z","iopub.status.idle":"2024-07-11T19:52:25.927992Z","shell.execute_reply.started":"2024-07-11T19:52:25.876290Z","shell.execute_reply":"2024-07-11T19:52:25.926344Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"{1: 'A',\n 2: 'B',\n 3: 'C',\n 4: 'D',\n 5: 'E',\n 6: 'F',\n 7: 'G',\n 8: 'H',\n 9: 'I',\n 10: 'J',\n 11: 'K',\n 12: 'L',\n 13: 'M',\n 14: 'N',\n 15: 'O',\n 16: 'P',\n 17: 'Q',\n 18: 'R',\n 19: 'S',\n 20: 'T',\n 21: 'U',\n 22: 'V',\n 23: 'W',\n 24: 'X',\n 25: 'Y',\n 26: 'Z',\n 27: 'a',\n 28: 'b',\n 29: 'c',\n 30: 'd',\n 31: 'e',\n 32: 'f',\n 33: 'g',\n 34: 'h',\n 35: 'i',\n 36: 'j',\n 37: 'k',\n 38: 'l',\n 39: 'm',\n 40: 'n',\n 41: 'o',\n 42: 'p',\n 43: 'q',\n 44: 'r',\n 45: 's',\n 46: 't',\n 47: 'u',\n 48: 'v',\n 49: 'w',\n 50: 'x',\n 51: 'y',\n 52: 'z',\n 0: '.'}"},"metadata":{}}]},{"cell_type":"markdown","source":"Bulld the dateset","metadata":{}},{"cell_type":"code","source":"block_size = 3 # context length: how many characters taken to predict the next character\nX,Y = [], []\n\nfor n in names[:5]:\n    \n    context = [0] * block_size\n    for ch in n + '.':\n        ix = stoi[ch]\n        X.append(context)\n        Y.append(ix)\n        print(''.join(itos[i] for i in context), '--->', itos[ix])\n        context = context[1:] + [ix] # crop and append\n        \nX = torch.tensor(X)\nY = torch.tensor(Y)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:52:42.629990Z","iopub.execute_input":"2024-07-11T19:52:42.630476Z","iopub.status.idle":"2024-07-11T19:52:42.644079Z","shell.execute_reply.started":"2024-07-11T19:52:42.630440Z","shell.execute_reply":"2024-07-11T19:52:42.642464Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stdout","text":"... ---> M\n..M ---> a\n.Ma ---> r\nMar ---> y\nary ---> .\n... ---> A\n..A ---> n\n.An ---> n\nAnn ---> a\nnna ---> .\n... ---> E\n..E ---> m\n.Em ---> m\nEmm ---> a\nmma ---> .\n... ---> E\n..E ---> l\n.El ---> i\nEli ---> z\nliz ---> a\niza ---> b\nzab ---> e\nabe ---> t\nbet ---> h\neth ---> .\n... ---> M\n..M ---> i\n.Mi ---> n\nMin ---> n\ninn ---> i\nnni ---> e\nnie ---> .\n","output_type":"stream"}]},{"cell_type":"code","source":"X.shape, X.dtype, Y.shape, Y.dtype","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:52:52.473971Z","iopub.execute_input":"2024-07-11T19:52:52.474457Z","iopub.status.idle":"2024-07-11T19:52:52.482895Z","shell.execute_reply.started":"2024-07-11T19:52:52.474419Z","shell.execute_reply":"2024-07-11T19:52:52.481659Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"(torch.Size([32, 3]), torch.int64, torch.Size([32]), torch.int64)"},"metadata":{}}]},{"cell_type":"code","source":"def build_dataset(words):\n    X, Y = [], []\n    for n in words:\n    \n        context = [0] * block_size\n        for ch in n + '.':\n            ix = stoi[ch]\n            X.append(context)\n            Y.append(ix)\n        \n            context = context[1:] + [ix] # crop and append\n        \n    X = torch.tensor(X)\n    Y = torch.tensor(Y)\n    print(X.shape, Y.shape)\n    return X,Y","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:53:06.815188Z","iopub.execute_input":"2024-07-11T19:53:06.815602Z","iopub.status.idle":"2024-07-11T19:53:06.823701Z","shell.execute_reply.started":"2024-07-11T19:53:06.815571Z","shell.execute_reply":"2024-07-11T19:53:06.822446Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"random.shuffle(names)\nn1 = int(0.8*len(names))\nn2 = int(0.9*len(names))\n\nXtr, Ytr = build_dataset(names[:n1])\nXdev, Ydev = build_dataset(names[n1:n2])\nXte, Yte = build_dataset(names[n2:])","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:53:09.266115Z","iopub.execute_input":"2024-07-11T19:53:09.266576Z","iopub.status.idle":"2024-07-11T19:53:16.245026Z","shell.execute_reply.started":"2024-07-11T19:53:09.266543Z","shell.execute_reply":"2024-07-11T19:53:16.243539Z"},"trusted":true},"execution_count":40,"outputs":[{"name":"stdout","text":"torch.Size([1233618, 3]) torch.Size([1233618])\ntorch.Size([154343, 3]) torch.Size([154343])\ntorch.Size([154741, 3]) torch.Size([154741])\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Vocabulary of 53 characters is embeded into 2 dimensional embedding","metadata":{}},{"cell_type":"code","source":"C = torch.randn((53,2))","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:40:48.594682Z","iopub.execute_input":"2024-07-11T19:40:48.595176Z","iopub.status.idle":"2024-07-11T19:40:48.615171Z","shell.execute_reply.started":"2024-07-11T19:40:48.595133Z","shell.execute_reply":"2024-07-11T19:40:48.613465Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":"Index look-up is similar to matrix multiplication with one-hot encoding\n```python\nF.one_hot(torch.tensor(5), num_classes = 53).float() @ C == C[5]\n```\n_`int` tensor must be cast to `float` is mat-mul with a float tensor_\n\nThe one-hot encoding since it's filled with 0 will mask out everything else resulting in equivalent result. \n\nEmbedding can be interpreted as a indexing into a look-up table `C` or as the first layer of the neural network. Linear layer with weights matrix `C`. \n","metadata":{}},{"cell_type":"code","source":"C[5]","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:57:16.743797Z","iopub.execute_input":"2024-07-11T19:57:16.744264Z","iopub.status.idle":"2024-07-11T19:57:16.755304Z","shell.execute_reply.started":"2024-07-11T19:57:16.744231Z","shell.execute_reply":"2024-07-11T19:57:16.753883Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"tensor([-1.6828,  0.8930])"},"metadata":{}}]},{"cell_type":"code","source":"F.one_hot(torch.tensor(5), num_classes = 53).float() @ C","metadata":{"execution":{"iopub.status.busy":"2024-07-11T19:59:10.535415Z","iopub.execute_input":"2024-07-11T19:59:10.535913Z","iopub.status.idle":"2024-07-11T19:59:10.547387Z","shell.execute_reply.started":"2024-07-11T19:59:10.535877Z","shell.execute_reply":"2024-07-11T19:59:10.546039Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"tensor([-1.6828,  0.8930])"},"metadata":{}}]},{"cell_type":"code","source":"X[13,2]","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:06:50.954878Z","iopub.execute_input":"2024-07-11T20:06:50.955311Z","iopub.status.idle":"2024-07-11T20:06:50.964869Z","shell.execute_reply.started":"2024-07-11T20:06:50.955277Z","shell.execute_reply":"2024-07-11T20:06:50.963193Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"tensor(39)"},"metadata":{}}]},{"cell_type":"code","source":"C[X][13,2]","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:07:14.761999Z","iopub.execute_input":"2024-07-11T20:07:14.762675Z","iopub.status.idle":"2024-07-11T20:07:14.772591Z","shell.execute_reply.started":"2024-07-11T20:07:14.762641Z","shell.execute_reply":"2024-07-11T20:07:14.770893Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"tensor([-0.6251,  1.1078])"},"metadata":{}}]},{"cell_type":"code","source":"C[39]","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:07:20.224475Z","iopub.execute_input":"2024-07-11T20:07:20.224919Z","iopub.status.idle":"2024-07-11T20:07:20.234598Z","shell.execute_reply.started":"2024-07-11T20:07:20.224888Z","shell.execute_reply":"2024-07-11T20:07:20.233283Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"tensor([-0.6251,  1.1078])"},"metadata":{}}]},{"cell_type":"code","source":"emb = C[X]\nemb.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:23:58.583291Z","iopub.execute_input":"2024-07-11T20:23:58.583735Z","iopub.status.idle":"2024-07-11T20:23:58.593035Z","shell.execute_reply.started":"2024-07-11T20:23:58.583701Z","shell.execute_reply":"2024-07-11T20:23:58.591392Z"},"trusted":true},"execution_count":55,"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"torch.Size([32, 3, 2])"},"metadata":{}}]},{"cell_type":"markdown","source":"Inputs to the first layers is 3 * 2 because 3 dimensional context window and 2 dimensional embedding space\n```python\nemb.shape = torch.Size([1542702, 3, 2])\n```","metadata":{}},{"cell_type":"code","source":"W1 = torch.randn((6,100))\nb1 = torch.randn(100)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:24:04.470204Z","iopub.execute_input":"2024-07-11T20:24:04.470673Z","iopub.status.idle":"2024-07-11T20:24:04.477198Z","shell.execute_reply.started":"2024-07-11T20:24:04.470640Z","shell.execute_reply":"2024-07-11T20:24:04.475686Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"markdown","source":"Cannot directly multiply because of different dimensions\n```python\nemb @ W1 + b1\n\ntorch.view(-1) # infers the shape of the tensor\n```\nWill use `torch.view()` to reshape the tensor; efficient function since in memory the tensor is stored as a 1-dim vector and is computed to a different shape, storage offset, stride and shapes changed so 1-dim array can be seen as different n-dim arrays.\nblog post about [pytorch internals](http://blog.ezyang.com/2019/05/pytorch-internals/)\n\nBroadcasting to match dimensions when adding tensors\n- (32, 100) \n- (1,     100)","metadata":{}},{"cell_type":"code","source":"h = torch.tanh(emb.view(-1,6) @ W1 + b1)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:24:07.628015Z","iopub.execute_input":"2024-07-11T20:24:07.628681Z","iopub.status.idle":"2024-07-11T20:24:07.636211Z","shell.execute_reply.started":"2024-07-11T20:24:07.628640Z","shell.execute_reply":"2024-07-11T20:24:07.634795Z"},"trusted":true},"execution_count":57,"outputs":[]},{"cell_type":"code","source":"h.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:24:08.486457Z","iopub.execute_input":"2024-07-11T20:24:08.486936Z","iopub.status.idle":"2024-07-11T20:24:08.495265Z","shell.execute_reply.started":"2024-07-11T20:24:08.486899Z","shell.execute_reply":"2024-07-11T20:24:08.493917Z"},"trusted":true},"execution_count":58,"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"torch.Size([32, 100])"},"metadata":{}}]},{"cell_type":"code","source":"h","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:24:27.801925Z","iopub.execute_input":"2024-07-11T20:24:27.802417Z","iopub.status.idle":"2024-07-11T20:24:27.813747Z","shell.execute_reply.started":"2024-07-11T20:24:27.802367Z","shell.execute_reply":"2024-07-11T20:24:27.812427Z"},"trusted":true},"execution_count":59,"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"tensor([[ 0.8763, -0.9942, -0.5837,  ...,  0.0399, -0.4178,  0.0667],\n        [ 0.3973,  0.9267, -0.9967,  ...,  0.9998, -0.9946, -0.9747],\n        [-0.1217, -0.9849, -0.9960,  ...,  0.9990,  0.1219, -0.9942],\n        ...,\n        [-0.9204,  0.5330, -0.9426,  ...,  0.9160, -0.8298, -0.1059],\n        [ 0.2525,  0.1310,  0.8866,  ..., -0.1929, -0.2472,  0.5340],\n        [ 0.9569, -1.0000,  0.5356,  ..., -0.9925,  0.5934,  0.9938]])"},"metadata":{}}]},{"cell_type":"markdown","source":"Final layer of the network\nInput is `100` from the previous layer and output is `53` becuase 53 character dictionary","metadata":{}},{"cell_type":"code","source":"W2 = torch.randn((100,53))\nb1 = torch.randn(53)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:24:31.440548Z","iopub.execute_input":"2024-07-11T20:24:31.440983Z","iopub.status.idle":"2024-07-11T20:24:31.448336Z","shell.execute_reply.started":"2024-07-11T20:24:31.440951Z","shell.execute_reply":"2024-07-11T20:24:31.446510Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"code","source":"logits = h @ W2 + b1","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:25:26.398263Z","iopub.execute_input":"2024-07-11T20:25:26.398723Z","iopub.status.idle":"2024-07-11T20:25:26.405034Z","shell.execute_reply.started":"2024-07-11T20:25:26.398692Z","shell.execute_reply":"2024-07-11T20:25:26.403453Z"},"trusted":true},"execution_count":61,"outputs":[]},{"cell_type":"code","source":"logits.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:25:30.384643Z","iopub.execute_input":"2024-07-11T20:25:30.385705Z","iopub.status.idle":"2024-07-11T20:25:30.393076Z","shell.execute_reply.started":"2024-07-11T20:25:30.385665Z","shell.execute_reply":"2024-07-11T20:25:30.391826Z"},"trusted":true},"execution_count":62,"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"torch.Size([32, 53])"},"metadata":{}}]},{"cell_type":"code","source":"counts = logits.exp()","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:26:01.643111Z","iopub.execute_input":"2024-07-11T20:26:01.643570Z","iopub.status.idle":"2024-07-11T20:26:01.650023Z","shell.execute_reply.started":"2024-07-11T20:26:01.643536Z","shell.execute_reply":"2024-07-11T20:26:01.648532Z"},"trusted":true},"execution_count":63,"outputs":[]},{"cell_type":"code","source":"prob = counts / counts.sum(1, keepdims = True)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:26:02.495994Z","iopub.execute_input":"2024-07-11T20:26:02.496438Z","iopub.status.idle":"2024-07-11T20:26:02.502732Z","shell.execute_reply.started":"2024-07-11T20:26:02.496397Z","shell.execute_reply":"2024-07-11T20:26:02.501167Z"},"trusted":true},"execution_count":64,"outputs":[]},{"cell_type":"code","source":"prob.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:26:03.601588Z","iopub.execute_input":"2024-07-11T20:26:03.601993Z","iopub.status.idle":"2024-07-11T20:26:03.610779Z","shell.execute_reply.started":"2024-07-11T20:26:03.601962Z","shell.execute_reply":"2024-07-11T20:26:03.609270Z"},"trusted":true},"execution_count":65,"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"torch.Size([32, 53])"},"metadata":{}}]},{"cell_type":"markdown","source":"Every row in prob should sum to `1`","metadata":{}},{"cell_type":"code","source":"prob[0].sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:26:27.847841Z","iopub.execute_input":"2024-07-11T20:26:27.848334Z","iopub.status.idle":"2024-07-11T20:26:27.860217Z","shell.execute_reply.started":"2024-07-11T20:26:27.848289Z","shell.execute_reply":"2024-07-11T20:26:27.858992Z"},"trusted":true},"execution_count":67,"outputs":[{"execution_count":67,"output_type":"execute_result","data":{"text/plain":"tensor(1.0000)"},"metadata":{}}]},{"cell_type":"code","source":"prob[torch.arange(32),Y]","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:28:43.786857Z","iopub.execute_input":"2024-07-11T20:28:43.787266Z","iopub.status.idle":"2024-07-11T20:28:43.798803Z","shell.execute_reply.started":"2024-07-11T20:28:43.787233Z","shell.execute_reply":"2024-07-11T20:28:43.797349Z"},"trusted":true},"execution_count":74,"outputs":[{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"tensor([1.4000e-08, 2.6914e-13, 1.1055e-06, 3.4996e-10, 1.8799e-16, 1.9459e-04,\n        4.6404e-11, 1.8697e-11, 3.9821e-11, 6.5523e-08, 1.6254e-04, 4.8112e-07,\n        9.1760e-07, 7.8671e-08, 2.0188e-07, 1.6254e-04, 5.7511e-02, 4.2885e-05,\n        2.9527e-06, 2.7513e-09, 2.2176e-03, 6.9445e-14, 5.2786e-10, 4.1921e-07,\n        1.2879e-13, 1.4000e-08, 1.8816e-07, 2.4119e-09, 1.3243e-12, 1.8314e-03,\n        6.6418e-12, 1.1307e-14])"},"metadata":{}}]},{"cell_type":"code","source":"loss = -prob[torch.arange(32), Y].log().mean()\nloss","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:43:24.447500Z","iopub.execute_input":"2024-07-11T20:43:24.447999Z","iopub.status.idle":"2024-07-11T20:43:24.459283Z","shell.execute_reply.started":"2024-07-11T20:43:24.447965Z","shell.execute_reply":"2024-07-11T20:43:24.458067Z"},"trusted":true},"execution_count":83,"outputs":[{"execution_count":83,"output_type":"execute_result","data":{"text/plain":"tensor(18.3230)"},"metadata":{}}]},{"cell_type":"markdown","source":"Negative log-likelihood loss better to use because Pytorch will cluster all of the operations and is more \nmemory efficient since will not be creating new tensors like `counts`, `probs` and its also a much simpler backward pass to implement\n```python\nF.cross_entropy(logits, Y)   # efficient forward and backward pass\n```\nAlso to prevent running outside the Floating Point Operation rane Pytorcg will subtract the maximum value from the tensor for handling extreme values\nsee example below","metadata":{}},{"cell_type":"code","source":"demo_logits = torch.tensor([-30,-5,0,5,100])\ndemo_counts = demo_logits.exp()\ndemo_probs = demo_counts / demo_counts.sum()\ndemo_probs","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:40:52.922467Z","iopub.execute_input":"2024-07-11T20:40:52.923518Z","iopub.status.idle":"2024-07-11T20:40:52.934037Z","shell.execute_reply.started":"2024-07-11T20:40:52.923472Z","shell.execute_reply":"2024-07-11T20:40:52.932744Z"},"trusted":true},"execution_count":81,"outputs":[{"execution_count":81,"output_type":"execute_result","data":{"text/plain":"tensor([0., 0., 0., 0., nan])"},"metadata":{}}]},{"cell_type":"code","source":"demo_counts","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:41:32.487602Z","iopub.execute_input":"2024-07-11T20:41:32.488006Z","iopub.status.idle":"2024-07-11T20:41:32.497576Z","shell.execute_reply.started":"2024-07-11T20:41:32.487977Z","shell.execute_reply":"2024-07-11T20:41:32.496244Z"},"trusted":true},"execution_count":82,"outputs":[{"execution_count":82,"output_type":"execute_result","data":{"text/plain":"tensor([9.3576e-14, 6.7379e-03, 1.0000e+00, 1.4841e+02,        inf])"},"metadata":{}}]},{"cell_type":"code","source":"demo_logits = torch.tensor([-100,-5,0,5,100]) - 100\ndemo_counts = demo_logits.exp()\ndemo_probs = demo_counts / demo_counts.sum()\ndemo_probs","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:39:50.143124Z","iopub.execute_input":"2024-07-11T20:39:50.144953Z","iopub.status.idle":"2024-07-11T20:39:50.155282Z","shell.execute_reply.started":"2024-07-11T20:39:50.144894Z","shell.execute_reply":"2024-07-11T20:39:50.154177Z"},"trusted":true},"execution_count":77,"outputs":[{"execution_count":77,"output_type":"execute_result","data":{"text/plain":"tensor([0.0000e+00, 0.0000e+00, 3.7835e-44, 5.5211e-42, 1.0000e+00])"},"metadata":{}}]},{"cell_type":"markdown","source":"Everything together ","metadata":{}},{"cell_type":"code","source":"Xtr.shape, Ytr.shape # Training Data ","metadata":{"execution":{"iopub.status.busy":"2024-07-11T20:48:17.100697Z","iopub.execute_input":"2024-07-11T20:48:17.101111Z","iopub.status.idle":"2024-07-11T20:48:17.109570Z","shell.execute_reply.started":"2024-07-11T20:48:17.101080Z","shell.execute_reply":"2024-07-11T20:48:17.108146Z"},"trusted":true},"execution_count":85,"outputs":[{"execution_count":85,"output_type":"execute_result","data":{"text/plain":"(torch.Size([1233618, 3]), torch.Size([1233618]))"},"metadata":{}}]},{"cell_type":"code","source":"g = torch.Generator().manual_seed(42) # For reproducibility \nC = torch.randn((53, 10), generator=g)\nW1 = torch.randn((30, 200), generator = g)\nb1 = torch.randn(200, generator = g)\nW2 = torch.randn((200, 53), generator=g)\nb2 = torch.randn(53, generator=g)\nparameters = [C, W1, b1, W2, b2]","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:19:23.534866Z","iopub.execute_input":"2024-07-11T21:19:23.535292Z","iopub.status.idle":"2024-07-11T21:19:23.545082Z","shell.execute_reply.started":"2024-07-11T21:19:23.535261Z","shell.execute_reply":"2024-07-11T21:19:23.543472Z"},"trusted":true},"execution_count":106,"outputs":[]},{"cell_type":"code","source":"sum(p.nelement() for p in parameters ) # total number of parameters in the network","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:19:23.868702Z","iopub.execute_input":"2024-07-11T21:19:23.869179Z","iopub.status.idle":"2024-07-11T21:19:23.878026Z","shell.execute_reply.started":"2024-07-11T21:19:23.869145Z","shell.execute_reply":"2024-07-11T21:19:23.876354Z"},"trusted":true},"execution_count":107,"outputs":[{"execution_count":107,"output_type":"execute_result","data":{"text/plain":"17383"},"metadata":{}}]},{"cell_type":"markdown","source":"Must have grad for training ","metadata":{}},{"cell_type":"code","source":"for p in parameters:\n    p.requires_grad = True","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:19:24.594819Z","iopub.execute_input":"2024-07-11T21:19:24.595229Z","iopub.status.idle":"2024-07-11T21:19:24.601130Z","shell.execute_reply.started":"2024-07-11T21:19:24.595197Z","shell.execute_reply":"2024-07-11T21:19:24.599606Z"},"trusted":true},"execution_count":108,"outputs":[]},{"cell_type":"code","source":"lre = torch.linspace(-3,0,1000)\nlrs = 10**lre","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:19:24.836169Z","iopub.execute_input":"2024-07-11T21:19:24.837017Z","iopub.status.idle":"2024-07-11T21:19:24.843169Z","shell.execute_reply.started":"2024-07-11T21:19:24.836980Z","shell.execute_reply":"2024-07-11T21:19:24.841959Z"},"trusted":true},"execution_count":109,"outputs":[]},{"cell_type":"code","source":"lri = []\nlossi = []\nstepi = []","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:19:25.247569Z","iopub.execute_input":"2024-07-11T21:19:25.248050Z","iopub.status.idle":"2024-07-11T21:19:25.254204Z","shell.execute_reply.started":"2024-07-11T21:19:25.248015Z","shell.execute_reply":"2024-07-11T21:19:25.252977Z"},"trusted":true},"execution_count":110,"outputs":[]},{"cell_type":"code","source":"for i in range(1000):\n    \n    # minibatch construct\n    ix = torch.randint(0, X.shape[0], (32,))\n    \n    # Forward Pass\n    emb = C[Xtr[ix]] # (32, 3, 10)\n    h = torch.tanh(emb.view(-1, 30) @ W1 + b1) # (32, 200)\n    logits = h @ W2 + b2 # (32, 53)\n    loss = F.cross_entropy(logits, Y[ix])\n    # print(loss.item())\n    \n    # Backward pass\n    for p in parameters:\n        p.grad = None\n    loss.backward()\n    \n    # update\n    lr = lrs[i]\n    \n    for p in parameters:\n        p.data += -lr * p.grad\n    \n    # track stats \n    lri.append(lre[i])\n    stepi.append(i)\n    lossi.append(loss.log10().item())\n    ","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:19:25.604747Z","iopub.execute_input":"2024-07-11T21:19:25.605142Z","iopub.status.idle":"2024-07-11T21:19:26.300218Z","shell.execute_reply.started":"2024-07-11T21:19:25.605113Z","shell.execute_reply":"2024-07-11T21:19:26.298918Z"},"trusted":true},"execution_count":111,"outputs":[]},{"cell_type":"code","source":"plt.plot(lri, lossi)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:19:26.556009Z","iopub.execute_input":"2024-07-11T21:19:26.556510Z","iopub.status.idle":"2024-07-11T21:19:26.845058Z","shell.execute_reply.started":"2024-07-11T21:19:26.556473Z","shell.execute_reply":"2024-07-11T21:19:26.842972Z"},"trusted":true},"execution_count":112,"outputs":[{"execution_count":112,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fb7ac46fdf0>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"plt.plot(stepi, lossi)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:02:24.426331Z","iopub.execute_input":"2024-07-11T21:02:24.428140Z","iopub.status.idle":"2024-07-11T21:02:24.754881Z","shell.execute_reply.started":"2024-07-11T21:02:24.428083Z","shell.execute_reply":"2024-07-11T21:02:24.753405Z"},"trusted":true},"execution_count":96,"outputs":[{"execution_count":96,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fb7aaf27040>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Loss over the dataset","metadata":{}},{"cell_type":"code","source":"emb = C[Xtr] # (32, 3, 2)\nh = torch.tanh(emb.view(-1, 30) @ W1 + b1) # (32, 200)\nlogits = h @ W2 + b2\nloss = F.cross_entropy(logits, Ytr)\nloss","metadata":{"execution":{"iopub.status.busy":"2024-07-11T21:13:22.746055Z","iopub.execute_input":"2024-07-11T21:13:22.746520Z","iopub.status.idle":"2024-07-11T21:13:25.949859Z","shell.execute_reply.started":"2024-07-11T21:13:22.746486Z","shell.execute_reply":"2024-07-11T21:13:25.948364Z"},"trusted":true},"execution_count":97,"outputs":[{"execution_count":97,"output_type":"execute_result","data":{"text/plain":"tensor(26.6502, grad_fn=<NllLossBackward0>)"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}