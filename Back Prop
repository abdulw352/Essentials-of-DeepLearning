{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## The forward and backward passes","metadata":{}},{"cell_type":"code","source":"import pickle,gzip,math,os,time,shutil,torch,matplotlib as mpl, numpy as np\nfrom pathlib import Path\nfrom torch import tensor\nfrom fastcore.test import test_close\ntorch.manual_seed(42)\n\nmpl.rcParams['image.cmap'] = 'gray'\ntorch.set_printoptions(precision=2, linewidth=125, sci_mode=False)\nnp.set_printoptions(precision=2, linewidth=125)\n\nMNIST_URL='https://github.com/mnielsen/neural-networks-and-deep-learning/blob/master/data/mnist.pkl.gz?raw=true'\npath_data = Path('data')\npath_data.mkdir(exist_ok=True)\npath_gz = path_data/'mnist.pkl.gz'","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:01:10.597676Z","iopub.execute_input":"2024-08-15T18:01:10.598103Z","iopub.status.idle":"2024-08-15T18:01:10.608153Z","shell.execute_reply.started":"2024-08-15T18:01:10.598052Z","shell.execute_reply":"2024-08-15T18:01:10.606847Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"from urllib.request import urlretrieve\nif not path_gz.exists(): urlretrieve(MNIST_URL, path_gz)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:01:22.183026Z","iopub.execute_input":"2024-08-15T18:01:22.184150Z","iopub.status.idle":"2024-08-15T18:01:23.715696Z","shell.execute_reply.started":"2024-08-15T18:01:22.184106Z","shell.execute_reply":"2024-08-15T18:01:23.714484Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"!ls -l data","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:01:29.693934Z","iopub.execute_input":"2024-08-15T18:01:29.694791Z","iopub.status.idle":"2024-08-15T18:01:30.866730Z","shell.execute_reply.started":"2024-08-15T18:01:29.694748Z","shell.execute_reply":"2024-08-15T18:01:30.865075Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"total 16656\n-rw-r--r-- 1 root root 17051982 Aug 15 18:01 mnist.pkl.gz\n","output_type":"stream"}]},{"cell_type":"code","source":"with gzip.open(path_gz, 'rb') as f: ((x_train, y_train), (x_valid, y_valid), _) = pickle.load(f, encoding='latin-1')\nx_train, y_train, x_valid, y_valid = map(tensor, [x_train, y_train, x_valid, y_valid])","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:01:36.757934Z","iopub.execute_input":"2024-08-15T18:01:36.758410Z","iopub.status.idle":"2024-08-15T18:01:38.088954Z","shell.execute_reply.started":"2024-08-15T18:01:36.758371Z","shell.execute_reply":"2024-08-15T18:01:38.087837Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"def chunks(x, sz):\n    for i in range(0, len(x), sz): yield x[i:i+sz]\nmpl.rcParams['image.cmap'] = 'gray'\nplt.imshow(list(chunks(list(x_train[156]), 28)))","metadata":{"execution":{"iopub.status.busy":"2024-08-15T20:31:24.272248Z","iopub.execute_input":"2024-08-15T20:31:24.273688Z","iopub.status.idle":"2024-08-15T20:31:24.625254Z","shell.execute_reply.started":"2024-08-15T20:31:24.273641Z","shell.execute_reply":"2024-08-15T20:31:24.623772Z"},"trusted":true},"execution_count":80,"outputs":[{"execution_count":80,"output_type":"execute_result","data":{"text/plain":"<matplotlib.image.AxesImage at 0x7bff08579cc0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"## Foundations version","metadata":{}},{"cell_type":"markdown","source":"### Basic architecture","metadata":{}},{"cell_type":"code","source":"n,m = x_train.shape\nc = y_train.max()+1\nn,m,c","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:07.868255Z","iopub.execute_input":"2024-08-15T18:02:07.868670Z","iopub.status.idle":"2024-08-15T18:02:07.916608Z","shell.execute_reply.started":"2024-08-15T18:02:07.868634Z","shell.execute_reply":"2024-08-15T18:02:07.915485Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"(50000, 784, tensor(10))"},"metadata":{}}]},{"cell_type":"code","source":"# num hidden\nnh = 50","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:10.798117Z","iopub.execute_input":"2024-08-15T18:02:10.798539Z","iopub.status.idle":"2024-08-15T18:02:10.804150Z","shell.execute_reply.started":"2024-08-15T18:02:10.798506Z","shell.execute_reply":"2024-08-15T18:02:10.802681Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"w1 = torch.randn(m,nh)\nb1 = torch.zeros(nh)\nw2 = torch.randn(nh,1)\nb2 = torch.zeros(1)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:42:54.978367Z","iopub.execute_input":"2024-08-15T18:42:54.980126Z","iopub.status.idle":"2024-08-15T18:42:54.990960Z","shell.execute_reply.started":"2024-08-15T18:42:54.980042Z","shell.execute_reply":"2024-08-15T18:42:54.989396Z"},"trusted":true},"execution_count":59,"outputs":[]},{"cell_type":"code","source":"def lin(x, w, b): return x@w + b","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:14.012789Z","iopub.execute_input":"2024-08-15T18:02:14.013296Z","iopub.status.idle":"2024-08-15T18:02:14.019855Z","shell.execute_reply.started":"2024-08-15T18:02:14.013252Z","shell.execute_reply":"2024-08-15T18:02:14.018267Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"t = lin(x_valid, w1, b1)\nt.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:14.530592Z","iopub.execute_input":"2024-08-15T18:02:14.531009Z","iopub.status.idle":"2024-08-15T18:02:14.566868Z","shell.execute_reply.started":"2024-08-15T18:02:14.530972Z","shell.execute_reply":"2024-08-15T18:02:14.565642Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"torch.Size([10000, 50])"},"metadata":{}}]},{"cell_type":"code","source":"def relu(x): return x.clamp_min(0.)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:15.296198Z","iopub.execute_input":"2024-08-15T18:02:15.296637Z","iopub.status.idle":"2024-08-15T18:02:15.302778Z","shell.execute_reply.started":"2024-08-15T18:02:15.296600Z","shell.execute_reply":"2024-08-15T18:02:15.301445Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"t = relu(t)\nt","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:15.400055Z","iopub.execute_input":"2024-08-15T18:02:15.400511Z","iopub.status.idle":"2024-08-15T18:02:15.469484Z","shell.execute_reply.started":"2024-08-15T18:02:15.400476Z","shell.execute_reply":"2024-08-15T18:02:15.468175Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"tensor([[ 0.00, 11.87,  0.00,  ...,  5.48,  2.14, 15.30],\n        [ 5.38, 10.21,  0.00,  ...,  0.88,  0.08, 20.23],\n        [ 3.31,  0.12,  3.10,  ..., 16.89,  0.00, 24.74],\n        ...,\n        [ 4.01, 10.35,  0.00,  ...,  0.23,  0.00, 18.28],\n        [10.62,  0.00, 10.72,  ...,  0.00,  0.00, 18.23],\n        [ 2.84,  0.00,  1.43,  ...,  0.00,  5.75,  2.12]])"},"metadata":{}}]},{"cell_type":"code","source":"def model(xb):\n    l1 = lin(xb, w1, b1)\n    l2 = relu(l1)\n    return lin(l2, w2, b2)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:17.308377Z","iopub.execute_input":"2024-08-15T18:02:17.308760Z","iopub.status.idle":"2024-08-15T18:02:17.314964Z","shell.execute_reply.started":"2024-08-15T18:02:17.308729Z","shell.execute_reply":"2024-08-15T18:02:17.313693Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"res = model(x_valid)\nres.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:17.618119Z","iopub.execute_input":"2024-08-15T18:02:17.618542Z","iopub.status.idle":"2024-08-15T18:02:17.646290Z","shell.execute_reply.started":"2024-08-15T18:02:17.618510Z","shell.execute_reply":"2024-08-15T18:02:17.645045Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"torch.Size([10000, 1])"},"metadata":{}}]},{"cell_type":"markdown","source":"### Loss function: MSE","metadata":{}},{"cell_type":"markdown","source":"(Of course, `mse` is not a suitable loss function for multi-class classification; we'll use a better loss function soon. We'll use `mse` for now to keep things simple.)","metadata":{}},{"cell_type":"code","source":"res.shape,y_valid.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:20.781611Z","iopub.execute_input":"2024-08-15T18:02:20.782039Z","iopub.status.idle":"2024-08-15T18:02:20.790187Z","shell.execute_reply.started":"2024-08-15T18:02:20.782005Z","shell.execute_reply":"2024-08-15T18:02:20.788862Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"(torch.Size([10000, 1]), torch.Size([10000]))"},"metadata":{}}]},{"cell_type":"code","source":"(res-y_valid).shape","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:21.216512Z","iopub.execute_input":"2024-08-15T18:02:21.216931Z","iopub.status.idle":"2024-08-15T18:02:21.453272Z","shell.execute_reply.started":"2024-08-15T18:02:21.216886Z","shell.execute_reply":"2024-08-15T18:02:21.452041Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"torch.Size([10000, 10000])"},"metadata":{}}]},{"cell_type":"markdown","source":"We need to get rid of that trailing (,1), in order to use `mse`.","metadata":{}},{"cell_type":"code","source":"res[:,0].shape","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:22.144089Z","iopub.execute_input":"2024-08-15T18:02:22.144488Z","iopub.status.idle":"2024-08-15T18:02:22.152508Z","shell.execute_reply.started":"2024-08-15T18:02:22.144457Z","shell.execute_reply":"2024-08-15T18:02:22.151138Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"torch.Size([10000])"},"metadata":{}}]},{"cell_type":"code","source":"res.squeeze().shape","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:22.327583Z","iopub.execute_input":"2024-08-15T18:02:22.328015Z","iopub.status.idle":"2024-08-15T18:02:22.336846Z","shell.execute_reply.started":"2024-08-15T18:02:22.327978Z","shell.execute_reply":"2024-08-15T18:02:22.334935Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"torch.Size([10000])"},"metadata":{}}]},{"cell_type":"code","source":"(res[:,0]-y_valid).shape","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:22.494822Z","iopub.execute_input":"2024-08-15T18:02:22.495286Z","iopub.status.idle":"2024-08-15T18:02:22.503928Z","shell.execute_reply.started":"2024-08-15T18:02:22.495248Z","shell.execute_reply":"2024-08-15T18:02:22.502814Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"torch.Size([10000])"},"metadata":{}}]},{"cell_type":"code","source":"y_train,y_valid = y_train.float(),y_valid.float()\n\npreds = model(x_train)\npreds.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:23.092246Z","iopub.execute_input":"2024-08-15T18:02:23.092690Z","iopub.status.idle":"2024-08-15T18:02:23.152821Z","shell.execute_reply.started":"2024-08-15T18:02:23.092657Z","shell.execute_reply":"2024-08-15T18:02:23.151602Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"torch.Size([50000, 1])"},"metadata":{}}]},{"cell_type":"code","source":"def mse(output, targ): return (output[:,0]-targ).pow(2).mean()","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:23.352792Z","iopub.execute_input":"2024-08-15T18:02:23.353244Z","iopub.status.idle":"2024-08-15T18:02:23.359402Z","shell.execute_reply.started":"2024-08-15T18:02:23.353200Z","shell.execute_reply":"2024-08-15T18:02:23.357978Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"mse(preds, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:23.707796Z","iopub.execute_input":"2024-08-15T18:02:23.708240Z","iopub.status.idle":"2024-08-15T18:02:23.723036Z","shell.execute_reply.started":"2024-08-15T18:02:23.708203Z","shell.execute_reply":"2024-08-15T18:02:23.721737Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"tensor(4308.76)"},"metadata":{}}]},{"cell_type":"markdown","source":"### Gradients and backward pass","metadata":{}},{"cell_type":"code","source":"from sympy import symbols,diff\nx,y = symbols('x y')\ndiff(x**2, x)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T19:03:21.185395Z","iopub.execute_input":"2024-08-15T19:03:21.185887Z","iopub.status.idle":"2024-08-15T19:03:21.199644Z","shell.execute_reply.started":"2024-08-15T19:03:21.185850Z","shell.execute_reply":"2024-08-15T19:03:21.198373Z"},"trusted":true},"execution_count":60,"outputs":[{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"2*x","text/latex":"$\\displaystyle 2 x$"},"metadata":{}}]},{"cell_type":"code","source":"diff(3*x**2+9, x)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:25.066656Z","iopub.execute_input":"2024-08-15T18:02:25.067607Z","iopub.status.idle":"2024-08-15T18:02:25.078255Z","shell.execute_reply.started":"2024-08-15T18:02:25.067569Z","shell.execute_reply":"2024-08-15T18:02:25.076814Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"6*x","text/latex":"$\\displaystyle 6 x$"},"metadata":{}}]},{"cell_type":"code","source":"import pdb","metadata":{"execution":{"iopub.status.busy":"2024-08-15T20:33:13.518537Z","iopub.execute_input":"2024-08-15T20:33:13.518998Z","iopub.status.idle":"2024-08-15T20:33:13.525389Z","shell.execute_reply.started":"2024-08-15T20:33:13.518954Z","shell.execute_reply":"2024-08-15T20:33:13.523897Z"},"trusted":true},"execution_count":81,"outputs":[]},{"cell_type":"markdown","source":"Use the Python Debugger to debug (helpful in tracing steps in a function)\n```python\npdb.set_trace()\n```","metadata":{}},{"cell_type":"code","source":"def lin_grad(inp, out, w, b):\n    # grad of matmul with respect to input\n    inp.g = out.g @ w.t()\n    i,o = inp.unsqueeze(-1), out.g.unsqueeze(1)\n    w.g = (i * o).sum(0) # same as the matrix multiply below\n    w.g = inp.T@out.g \n    b.g = out.g.sum(0)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T20:37:25.071478Z","iopub.execute_input":"2024-08-15T20:37:25.072755Z","iopub.status.idle":"2024-08-15T20:37:25.079857Z","shell.execute_reply.started":"2024-08-15T20:37:25.072713Z","shell.execute_reply":"2024-08-15T20:37:25.078417Z"},"trusted":true},"execution_count":82,"outputs":[]},{"cell_type":"code","source":"def forward_and_backward(inp, targ):\n    # forward pass:\n    l1 = lin(inp, w1, b1)\n    l2 = relu(l1)\n    out = lin(l2, w2, b2)\n    diff = out[:,0]-targ\n    loss = diff.pow(2).mean()\n    \n    # backward pass:\n    out.g = 2.*diff[:,None] / inp.shape[0]\n    lin_grad(l2, out, w2, b2)\n    l1.g = (l1>0).float() * l2.g\n    lin_grad(inp, l1, w1, b1)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:27.927349Z","iopub.execute_input":"2024-08-15T18:02:27.927759Z","iopub.status.idle":"2024-08-15T18:02:27.935585Z","shell.execute_reply.started":"2024-08-15T18:02:27.927725Z","shell.execute_reply":"2024-08-15T18:02:27.934262Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"forward_and_backward(x_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:30.108723Z","iopub.execute_input":"2024-08-15T18:02:30.109566Z","iopub.status.idle":"2024-08-15T18:02:36.596291Z","shell.execute_reply.started":"2024-08-15T18:02:30.109520Z","shell.execute_reply":"2024-08-15T18:02:36.595154Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"# Save for testing against later\ndef get_grad(x): return x.g.clone()\nchks = w1,w2,b1,b2,x_train\ngrads = w1g,w2g,b1g,b2g,ig = tuple(map(get_grad, chks))","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:36.598631Z","iopub.execute_input":"2024-08-15T18:02:36.599127Z","iopub.status.idle":"2024-08-15T18:02:36.667175Z","shell.execute_reply.started":"2024-08-15T18:02:36.599082Z","shell.execute_reply":"2024-08-15T18:02:36.665606Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"markdown","source":"We cheat a little bit and use PyTorch autograd to check our results.","metadata":{}},{"cell_type":"code","source":"def mkgrad(x): return x.clone().requires_grad_(True)\nptgrads = w12,w22,b12,b22,xt2 = tuple(map(mkgrad, chks))","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:36.669319Z","iopub.execute_input":"2024-08-15T18:02:36.669716Z","iopub.status.idle":"2024-08-15T18:02:36.735682Z","shell.execute_reply.started":"2024-08-15T18:02:36.669681Z","shell.execute_reply":"2024-08-15T18:02:36.734352Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"def forward(inp, targ):\n    l1 = lin(inp, w12, b12)\n    l2 = relu(l1)\n    out = lin(l2, w22, b22)\n    return mse(out, targ)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:36.738101Z","iopub.execute_input":"2024-08-15T18:02:36.738518Z","iopub.status.idle":"2024-08-15T18:02:36.745537Z","shell.execute_reply.started":"2024-08-15T18:02:36.738483Z","shell.execute_reply":"2024-08-15T18:02:36.743821Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"loss = forward(xt2, y_train)\nloss.backward()","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:36.746795Z","iopub.execute_input":"2024-08-15T18:02:36.747193Z","iopub.status.idle":"2024-08-15T18:02:37.042454Z","shell.execute_reply.started":"2024-08-15T18:02:36.747160Z","shell.execute_reply":"2024-08-15T18:02:37.041177Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"for a,b in zip(grads, ptgrads): test_close(a, b.grad, eps=0.01)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:37.044427Z","iopub.execute_input":"2024-08-15T18:02:37.044792Z","iopub.status.idle":"2024-08-15T18:02:37.256449Z","shell.execute_reply.started":"2024-08-15T18:02:37.044760Z","shell.execute_reply":"2024-08-15T18:02:37.255084Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":"## Refactor model","metadata":{}},{"cell_type":"markdown","source":"### Layers as classes","metadata":{}},{"cell_type":"code","source":"class Relu():\n    def __call__(self, inp):\n        self.inp = inp\n        self.out = inp.clamp_min(0.)\n        return self.out\n    \n    def backward(self): self.inp.g = (self.inp>0).float() * self.out.g","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:41.375717Z","iopub.execute_input":"2024-08-15T18:02:41.376186Z","iopub.status.idle":"2024-08-15T18:02:41.383090Z","shell.execute_reply.started":"2024-08-15T18:02:41.376149Z","shell.execute_reply":"2024-08-15T18:02:41.381854Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"class Lin():\n    def __init__(self, w, b): self.w,self.b = w,b\n\n    def __call__(self, inp):\n        self.inp = inp\n        self.out = lin(inp, self.w, self.b)\n        return self.out\n\n    def backward(self):\n        self.inp.g = self.out.g @ self.w.t()\n        self.w.g = self.inp.t() @ self.out.g\n        self.b.g = self.out.g.sum(0)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:41.534244Z","iopub.execute_input":"2024-08-15T18:02:41.534663Z","iopub.status.idle":"2024-08-15T18:02:41.542629Z","shell.execute_reply.started":"2024-08-15T18:02:41.534630Z","shell.execute_reply":"2024-08-15T18:02:41.541401Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"code","source":"class Mse():\n    def __call__(self, inp, targ):\n        self.inp,self.targ = inp,targ\n        self.out = mse(inp, targ)\n        return self.out\n    \n    def backward(self):\n        self.inp.g = 2. * (self.inp.squeeze() - self.targ).unsqueeze(-1) / self.targ.shape[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:41.728866Z","iopub.execute_input":"2024-08-15T18:02:41.729294Z","iopub.status.idle":"2024-08-15T18:02:41.736888Z","shell.execute_reply.started":"2024-08-15T18:02:41.729259Z","shell.execute_reply":"2024-08-15T18:02:41.735498Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"class Model():\n    def __init__(self, w1, b1, w2, b2):\n        self.layers = [Lin(w1,b1), Relu(), Lin(w2,b2)]\n        self.loss = Mse()\n        \n    def __call__(self, x, targ):\n        for l in self.layers: x = l(x)\n        return self.loss(x, targ)\n    \n    def backward(self):\n        self.loss.backward()\n        for l in reversed(self.layers): l.backward()","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:41.904945Z","iopub.execute_input":"2024-08-15T18:02:41.905721Z","iopub.status.idle":"2024-08-15T18:02:41.913998Z","shell.execute_reply.started":"2024-08-15T18:02:41.905679Z","shell.execute_reply":"2024-08-15T18:02:41.912587Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"model = Model(w1, b1, w2, b2)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:42.180727Z","iopub.execute_input":"2024-08-15T18:02:42.181661Z","iopub.status.idle":"2024-08-15T18:02:42.187455Z","shell.execute_reply.started":"2024-08-15T18:02:42.181616Z","shell.execute_reply":"2024-08-15T18:02:42.185918Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"loss = model(x_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:42.349386Z","iopub.execute_input":"2024-08-15T18:02:42.349794Z","iopub.status.idle":"2024-08-15T18:02:42.406163Z","shell.execute_reply.started":"2024-08-15T18:02:42.349761Z","shell.execute_reply":"2024-08-15T18:02:42.404940Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"code","source":"model.backward()","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:42.526571Z","iopub.execute_input":"2024-08-15T18:02:42.526967Z","iopub.status.idle":"2024-08-15T18:02:42.744546Z","shell.execute_reply.started":"2024-08-15T18:02:42.526934Z","shell.execute_reply":"2024-08-15T18:02:42.743141Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"code","source":"test_close(w2g, w2.g, eps=0.01)\ntest_close(b2g, b2.g, eps=0.01)\ntest_close(w1g, w1.g, eps=0.01)\ntest_close(b1g, b1.g, eps=0.01)\ntest_close(ig, x_train.g, eps=0.01)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:43.033086Z","iopub.execute_input":"2024-08-15T18:02:43.033502Z","iopub.status.idle":"2024-08-15T18:02:43.248009Z","shell.execute_reply.started":"2024-08-15T18:02:43.033471Z","shell.execute_reply":"2024-08-15T18:02:43.246932Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"markdown","source":"### Module.forward()","metadata":{}},{"cell_type":"code","source":"class Module():\n    def __call__(self, *args):\n        self.args = args\n        self.out = self.forward(*args)\n        return self.out\n\n    def forward(self): raise Exception('not implemented')\n    def backward(self): self.bwd(self.out, *self.args)\n    def bwd(self): raise Exception('not implemented')","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:43.651391Z","iopub.execute_input":"2024-08-15T18:02:43.651767Z","iopub.status.idle":"2024-08-15T18:02:43.660750Z","shell.execute_reply.started":"2024-08-15T18:02:43.651738Z","shell.execute_reply":"2024-08-15T18:02:43.659340Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"class Relu(Module):\n    def forward(self, inp): return inp.clamp_min(0.)\n    def bwd(self, out, inp): inp.g = (inp>0).float() * out.g","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:43.977622Z","iopub.execute_input":"2024-08-15T18:02:43.978090Z","iopub.status.idle":"2024-08-15T18:02:43.986115Z","shell.execute_reply.started":"2024-08-15T18:02:43.978032Z","shell.execute_reply":"2024-08-15T18:02:43.984521Z"},"trusted":true},"execution_count":46,"outputs":[]},{"cell_type":"code","source":"class Lin(Module):\n    def __init__(self, w, b): self.w,self.b = w,b\n    def forward(self, inp): return inp@self.w + self.b\n    def bwd(self, out, inp):\n        inp.g = self.out.g @ self.w.t()\n        self.w.g = inp.t() @ self.out.g\n        self.b.g = self.out.g.sum(0)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:44.580448Z","iopub.execute_input":"2024-08-15T18:02:44.580857Z","iopub.status.idle":"2024-08-15T18:02:44.588991Z","shell.execute_reply.started":"2024-08-15T18:02:44.580822Z","shell.execute_reply":"2024-08-15T18:02:44.587655Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"class Mse(Module):\n    def forward (self, inp, targ): return (inp.squeeze() - targ).pow(2).mean()\n    def bwd(self, out, inp, targ): inp.g = 2*(inp.squeeze()-targ).unsqueeze(-1) / targ.shape[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:44.767357Z","iopub.execute_input":"2024-08-15T18:02:44.767812Z","iopub.status.idle":"2024-08-15T18:02:44.775164Z","shell.execute_reply.started":"2024-08-15T18:02:44.767775Z","shell.execute_reply":"2024-08-15T18:02:44.773679Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"code","source":"model = Model(w1, b1, w2, b2)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:45.091562Z","iopub.execute_input":"2024-08-15T18:02:45.091994Z","iopub.status.idle":"2024-08-15T18:02:45.098793Z","shell.execute_reply.started":"2024-08-15T18:02:45.091959Z","shell.execute_reply":"2024-08-15T18:02:45.097462Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"code","source":"loss = model(x_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:45.490889Z","iopub.execute_input":"2024-08-15T18:02:45.491355Z","iopub.status.idle":"2024-08-15T18:02:45.545811Z","shell.execute_reply.started":"2024-08-15T18:02:45.491317Z","shell.execute_reply":"2024-08-15T18:02:45.544694Z"},"trusted":true},"execution_count":50,"outputs":[]},{"cell_type":"code","source":"model.backward()","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:45.962138Z","iopub.execute_input":"2024-08-15T18:02:45.962564Z","iopub.status.idle":"2024-08-15T18:02:46.178612Z","shell.execute_reply.started":"2024-08-15T18:02:45.962529Z","shell.execute_reply":"2024-08-15T18:02:46.177420Z"},"trusted":true},"execution_count":51,"outputs":[]},{"cell_type":"code","source":"test_close(w2g, w2.g, eps=0.01)\ntest_close(b2g, b2.g, eps=0.01)\ntest_close(w1g, w1.g, eps=0.01)\ntest_close(b1g, b1.g, eps=0.01)\ntest_close(ig, x_train.g, eps=0.01)","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:46.180745Z","iopub.execute_input":"2024-08-15T18:02:46.181301Z","iopub.status.idle":"2024-08-15T18:02:46.392541Z","shell.execute_reply.started":"2024-08-15T18:02:46.181258Z","shell.execute_reply":"2024-08-15T18:02:46.391480Z"},"trusted":true},"execution_count":52,"outputs":[]},{"cell_type":"markdown","source":"### Autograd","metadata":{}},{"cell_type":"code","source":"from torch import nn\nimport torch.nn.functional as F","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:46.854919Z","iopub.execute_input":"2024-08-15T18:02:46.856123Z","iopub.status.idle":"2024-08-15T18:02:46.861202Z","shell.execute_reply.started":"2024-08-15T18:02:46.856032Z","shell.execute_reply":"2024-08-15T18:02:46.859935Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"code","source":"class Linear(nn.Module):\n    def __init__(self, n_in, n_out):\n        super().__init__()\n        self.w = torch.randn(n_in,n_out).requires_grad_()\n        self.b = torch.zeros(n_out).requires_grad_()\n    def forward(self, inp): return inp@self.w + self.b","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:47.056631Z","iopub.execute_input":"2024-08-15T18:02:47.057038Z","iopub.status.idle":"2024-08-15T18:02:47.064427Z","shell.execute_reply.started":"2024-08-15T18:02:47.057007Z","shell.execute_reply":"2024-08-15T18:02:47.062753Z"},"trusted":true},"execution_count":54,"outputs":[]},{"cell_type":"code","source":"class Model(nn.Module):\n    def __init__(self, n_in, nh, n_out):\n        super().__init__()\n        self.layers = [Linear(n_in,nh), nn.ReLU(), Linear(nh,n_out)]\n        \n    def __call__(self, x, targ):\n        for l in self.layers: x = l(x)\n        return F.mse_loss(x, targ[:,None])","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:47.277086Z","iopub.execute_input":"2024-08-15T18:02:47.277513Z","iopub.status.idle":"2024-08-15T18:02:47.285418Z","shell.execute_reply.started":"2024-08-15T18:02:47.277479Z","shell.execute_reply":"2024-08-15T18:02:47.284125Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"code","source":"model = Model(m, nh, 1)\nloss = model(x_train, y_train)\nloss.backward()","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:47.461411Z","iopub.execute_input":"2024-08-15T18:02:47.461818Z","iopub.status.idle":"2024-08-15T18:02:47.594042Z","shell.execute_reply.started":"2024-08-15T18:02:47.461787Z","shell.execute_reply":"2024-08-15T18:02:47.592467Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"code","source":"l0 = model.layers[0]\nl0.b.grad","metadata":{"execution":{"iopub.status.busy":"2024-08-15T18:02:47.648826Z","iopub.execute_input":"2024-08-15T18:02:47.649260Z","iopub.status.idle":"2024-08-15T18:02:47.662247Z","shell.execute_reply.started":"2024-08-15T18:02:47.649225Z","shell.execute_reply":"2024-08-15T18:02:47.661104Z"},"trusted":true},"execution_count":57,"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"tensor([-19.60,  -2.40,  -0.12,   1.99,  12.78, -15.32, -18.45,   0.35,   3.75,  14.67,  10.81,  12.20,  -2.95, -28.33,\n          0.76,  69.15, -21.86,  49.78,  -7.08,   1.45,  25.20,  11.27, -18.15, -13.13, -17.69, -10.42,  -0.13, -18.89,\n        -34.81,  -0.84,  40.89,   4.45,  62.35,  31.70,  55.15,  45.13,   3.25,  12.75,  12.45,  -1.41,   4.55,  -6.02,\n        -62.51,  -1.89,  -1.41,   7.00,   0.49,  18.72,  -4.84,  -6.52])"},"metadata":{}}]}]}